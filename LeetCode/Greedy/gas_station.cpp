/*
 * @Descripttion: 
 * @Author: AruNi
 * @Date: 2022-05-19 21:07:03
 */

/*
题目：
在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。
你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。
你从其中的一个加油站出发，开始时油箱为空。
给定两个整数数组 gas 和 cost ，如果你可以绕环路行驶一周，则返回出发时加油站的编号，
否则返回 -1 。如果存在解，则 保证 它是 唯一 的。

 

示例 1:
输入: gas = [1,2,3,4,5], cost = [3,4,5,1,2]
输出: 3
解释:
从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油
开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油
开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油
开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油
开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油
开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。
因此，3 可为起始索引。

示例 2:

输入: gas = [2,3,4], cost = [3,4,3]
输出: -1
解释:
你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。
我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油
开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油
开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油
你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。
因此，无论怎样，你都不可能绕环路行驶一周。
*/

/*
贪心算法：
    情况一：如果各站点剩余油量 gas[i] - cost[i] 的总和 totalSum 为负数，肯定不可能绕一圈。
    情况二：如果 gas[i] - cost[i] 的总和 totalSum 不为负数，那么肯定可以绕一圈：
            如果在区间 [0, j] 内，gas[i] - cost[i] 的总和curSum为负数，
            说明 [0, j] 区间都不能作为起始位置，起始位置从 j + 1 算起，再从0计算curSum。
            如果下个区间的总和curSum不小于零，那么开始位置 j + 1 即为起点。
*/
class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int curSum = 0;
        int totalSum = 0;
        int start = 0;
        for (int i = 0; i < gas.size(); i++) {
            curSum += gas[i] - cost[i];     // 当前区间剩余的油量
            totalSum += gas[i] - cost[i];       // 总剩余油量
            if (curSum < 0) {       // 当前区间剩余油量为负数，改变区间
                start = i + 1;      // 起始位置更新为i+1
                curSum = 0;     // curSum从0开始
            }
        }
        // for循环完后，既计算除了总剩余油量，也得出了出发位置（当totalSum不为负数时）
        if (totalSum < 0) return -1;        // 总剩余油量为负数，不可能绕一圈
        return start;
    }
};