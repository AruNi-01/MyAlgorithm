/*
 * @Descripttion: 377. 组合总和 Ⅳ
 * @Author: AruNi
 * @Date: 2022-06-01 21:50:57
 */


/*
题目：
给你一个由 不同 整数组成的数组 nums ，和一个目标整数 target 。
请你从 nums 中找出并返回总和为 target 的元素组合的个数。
题目数据保证答案符合 32 位整数范围。

示例 1：
输入：nums = [1,2,3], target = 4
输出：7
解释：
所有可能的组合为：
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)
请注意，顺序不同的序列被视作不同的组合。

示例 2：
输入：nums = [9], target = 3
输出：0
*/

/*
思路：
    题目说是求组合，但是可以元素相同顺序不同的组合算两个组合，其实就是求排列！
    在回溯专题中，39.组合总和、40.组合总和II 和本题很像。
    但其本质是本题求的是排列总和，仅仅是求排列总和的个数，并不是把所有的排列都列出来。
    如果本题要把排列都列出来的话，只能使用回溯算法爆搜。

DP五部曲：
    1. 确定dp数组和其下标的含义
        dp[i]：凑成目标整数位 i 的排列个数位dp[i]
    2. 确定递推公式
        dp[i]（考虑nums[j]）可以由 dp[i - nums[j]]（不考虑nums[j]） 推导出来。
        因为只要得到nums[j]，排列个数dp[i - nums[j]]，就是dp[i]的一部分。
        递推公式：dp[i] += dp[i - nums[j]];
    3. dp数组的初始化
        因为递推公式dp[i] += dp[i - nums[j]]的缘故，dp[0]要初始化为1，
        这样递归其他dp[i]的时候才会有数值基础。
        至于dp[0] = 1 其实没有意义，因为题目中也说了：给定目标值是正整数！ 
        所以dp[0] = 1是没有意义的，仅仅是为了推导递推公式。
        至于非0下标的 dp[i] 初始化为0，这样才不会影响 dp[i]累加所有的 dp[i - nums[j]]。
    4. 确定遍历顺序
        个数可以不限使用，说明这是一个完全背包。
        得到的集合是排列，说明需要考虑元素之间的顺序。
        在题 518.零钱兑换II 中就已经讲过了，
        如果求组合数就是外层for循环遍历物品，内层for遍历背包。
        如果求排列数就是外层for遍历背包，内层for循环遍历物品。

        如果把遍历nums（物品）放在外循环，遍历target的作为内循环的话，举一个例子：
        计算dp[4]的时候，结果集只有 {1,3} 这样的集合，不会有{3,1}这样的集合，
        因为nums遍历放在外层，3只能出现在1后面！

        所以本题最终遍历顺序：target（背包）放在外循环，
        将nums（物品）放在内循环，内循环从前到后遍历。
    5. 举例dp数组的推导
        用示例中的例子推导一下：https://img-blog.csdnimg.cn/20210131174250148.jpg
*/
class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        vector<int> dp(target + 1, 0);
        dp[0] = 1;
        for (int i = 0; i <= target; i++) {     // 遍历背包
            for (int j = 0; j < nums.size(); j++) {     // 遍历物品
                if (i >= nums[j] && dp[i] < INT_MAX - dp[i - nums[j]]) {
                    dp[i] += dp[i- nums[j]];
                }
            }
        }
        return dp[target];
    }
};
//C++测试用例有超过两个数相加超过int的数据，所以需要在if里加上dp[i] < INT_MAX - dp[i - num]。
//但java就不用考虑这个限制，java里的int也是四个字节吧，也有可能leetcode后台对不同语言的测试数据不一样。